from socket import *
import os
import sys
import random
import string

COMMANDS = ["STATS", "RTIME", "LTIME", "SRUN", "TRUN", "GMON", "GDOG", "KSTET", "GTER", "HTER", "LTER", "KSTAN"]
TIMEOUT_IN_SEC = 3
HOST = "10.211.55.18"
PORT = 9999

def main():
    with open("output/success.txt", "a") as success:
        with open("output/failure.txt", "a") as failure:
            clientSocket = socket(AF_INET, SOCK_STREAM)
            clientSocket.settimeout(TIMEOUT_IN_SEC)
            clientSocket.connect((HOST, PORT))
            response = clientSocket.recv(1024).decode("utf-8")
            success.write("from server:\n{}\n".format(response))

            try:
                fuzz(clientSocket, success, failure)
            except Exception as e:
                print(e)

            clientSocket.close()
            print("client disconnected\n")

def fuzz(clientSocket, success, failure):
    while True:
        command = random.choice(COMMANDS)
        i = 0
        response = ""
        while "UNKNOWN COMMAND" not in response:
            buffer = command + " " + get_random_str(i)
            print_buffer = buffer.encode('unicode_escape').decode('utf-8')
            clientSocket.send(buffer.encode())

            response = clientSocket.recv(4096).decode('utf-8')

            success.write(("-" * 20) + "\n")
            success.write("TO SERVER:\n{}\nSTRING LENGTH:\n{}\n\nFROM SERVER:\n{}\n".format(print_buffer, i, response))

            i += 10
        failure.write("FAILED COMMAND:\n{}\nSTRING LENGTH:\n{}\nRESPONSE:{}\n".format(print_buffer, i - 10, response))

        response = clientSocket.recv(4096).decode('utf-8')
        failure.write("ADDITIONAL RESPONSE:\n{}\n".format(response))
        failure.write(("-" * 20) + "\n")


def get_random_str(length):
    return ''.join(random.choice(string.printable) for i in range(length))


if __name__ == "__main__":
    try:
        os.mkdir("output")
        main()
    except Exception as e:
        print(e, "Delete output directory")